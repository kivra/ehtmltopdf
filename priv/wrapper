#!/usr/bin/env bash
#
# Erlang can't close the stdin pipe of its subprocesses but wkhtmltopdf
# won't return the PDF until the pipe is closed so wrap wkhtmltopdf in this.
# From Erlang, the the HTML is output, followed by a newline and the
# (probably) unique EOF marker. This script buffers the HTML until
# it sees this EOF marker, then runs wkhtmltopdf.
#
# Pipes are used to avoid having to clean up temporary files that may
# not be dealt with easily when things go wrong.
#------------------------------------------------------------------------------
# Copyright (c) 2012 KIVRA
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
#------------------------------------------------------------------------------

EOF=erlang-port-eof-kh9823rheifn8hn398hc3489c4hc489crn3983c238cbb39c
while read LINE; do
    if [[ ! -z $LINE ]]
    then
        if [[ $LINE == $EOF ]]
        then
            echo $DATA | $1 -q $2 - -
            exit $?
        else
            DATA=${DATA}${LINE}
        fi
    fi
done
